stages:
- prepare
- test

docker 1.10:
  stage: prepare
  image: docker:latest
  script:
  - cd build/docker
  - docker login -uiloveflamingobot -p${DOCKERPASSWORD}
  - docker build --pull -t iloveflamingo/buildenv:1.10 -f Dockerfile-1.10 .
  - docker push iloveflamingo/buildenv:1.10
  only:
  - master

docker 1.11:
  stage: prepare
  image: docker:latest
  script:
  - cd build/docker
  - docker login -uiloveflamingobot -p${DOCKERPASSWORD}
  - docker build --pull -t iloveflamingo/buildenv:1.11 -f Dockerfile-1.11 .
  - docker push iloveflamingo/buildenv:1.11
  only:
  - master

.dep: &dep
  stage: test
  image: iloveflamingo/buildenv:1.11
  cache:
    paths:
    - .dep
  before_script:
  - export DEPCACHEDIR=$(pwd -P)/.dep
  - mkdir -p "${GOPATH}/src/flamingo.me/"
  - export GODIR="${GOPATH}/src/flamingo.me/flamingo"
  - ln -sfv "$(pwd -P)" "${GODIR}"
  - /pact/pact-go_linux_amd64 daemon &
  - cd "${GODIR}"
  - dep ensure -vendor-only

cover flamingo:
  <<: *dep
  script:
  - go test -coverprofile cover.out ./...
  - go tool cover -func cover.out

test flamingo:
  <<: *dep
  script:
  - go test -race ./...

static-check flamingo:
  <<: *dep
  allow_failure: true
  script:
  - golint -set_exit_status $(go list ./...)
  - go vet ./...
  - gocritic check-project .

test flamingo 1.10:
  <<: *dep
  image: iloveflamingo/buildenv:1.10
  script:
  - go test -race ./...

#vet flamingo:
#  <<: *dep
#  script:
#  - go test -vet 'all' -race ./...
#  allow_failure: true
