package mocks

import mock "github.com/stretchr/testify/mock"
import responder "flamingo.me/flamingo/framework/web/responder"
import web "flamingo.me/flamingo/framework/web"

// RenderAware is an autogenerated mock type for the RenderAware type
type RenderAware struct {
	mock.Mock
}

// Render provides a mock function with given fields: context, tpl, data
func (_m *RenderAware) Render(context web.Context, tpl string, data interface{}) web.Response {
	ret := _m.Called(context, tpl, data)

	var r0 web.Response
	if rf, ok := ret.Get(0).(func(web.Context, string, interface{}) web.Response); ok {
		r0 = rf(context, tpl, data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(web.Response)
		}
	}

	return r0
}

// WithStatusCode provides a mock function with given fields: code
func (_m *RenderAware) WithStatusCode(code int) responder.RenderAware {
	ret := _m.Called(code)

	var r0 responder.RenderAware
	if rf, ok := ret.Get(0).(func(int) responder.RenderAware); ok {
		r0 = rf(code)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(responder.RenderAware)
		}
	}

	return r0
}
